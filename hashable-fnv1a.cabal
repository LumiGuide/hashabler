-- Initial hashable-fnv1a.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- TODO change package and namespaces from fnv1a to just fnv
--      OR: hashabler, hashknicely, hashabrer
name:                hashable-fnv1a
version:             0.1.0.0
-- synopsis:            
description:         
    This package is a rewrite of the @hashable@ library by Milan Straka and
    Johan Tibell, having the following goals:
    .
    - TODO
    .


-- TODO REVISIT RECENT CHANGES IN hashable AND COPY THEM HERE. ALSO LOOK AT THEIR .cabal FILE !!!

homepage:            https://github.com/jberryman/hashable-fnv1a
license:             BSD3
license-file:        LICENSE
author:              Brandon Simmons
maintainer:          brandon.m.simmons@gmail.com
-- copyright:           
category:            Data
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

-- I guess we depend on impl(ghc) at this point, but maybe we can fix that
Flag integer-gmp
  Description: Are we using integer-gmp to provide fast Integer instances?
  Default: True

Flag dev
  Description: Build the tests and benchmark suites?
  Default: False

library
  if flag(dev)
      CPP-Options:     -DEXPORT_INTERNALS

  exposed-modules:     Data.Hashable.FNV1a
  other-modules:       MachDeps
  -- other-extensions:    
  build-depends:       base >=4.3 && <5
                     , array
                     , bytestring
                     , text
                     , primitive
                     , ghc-prim
                     -- For endianness test:
                     , template-haskell

  if flag(integer-gmp)
      Build-depends:   integer-gmp >= 0.2

  -- TODO . AND COPY TO OTHER STANZAS
  if impl(ghc >= 7.2.1)
    CPP-Options:     -DGENERICS
    -- Other-modules:   Data.Hashabler.Generic

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options: -Wall -fwarn-tabs -O2 -funbox-strict-fields

-- TODO:
-- test-suite quality

-- I'm not sure how to make this test-suite and still be able to get
-- conditional export list in library:
Executable tests
  default-language:    Haskell2010
  hs-source-dirs:      tests
  main-is:             Main.hs
  ghc-options:         -Wall -O2 -threaded -funbox-strict-fields -fno-ignore-asserts
  if flag(dev)
      buildable: True
      build-depends:       base
                         , hashable-fnv1a
                         , directory
                         , bytestring
                         , text
                         , primitive
                         , random
                         , QuickCheck
      if flag(integer-gmp)
          Build-depends:   integer-gmp >= 0.2
  else 
      buildable: False


Executable bench
  default-language:    Haskell2010
  main-is:             Main.hs
  ghc-options:         -Wall -O2 -threaded -funbox-strict-fields
  hs-source-dirs:      benchmarks
  if flag(dev)
      buildable: True
      build-depends:   base
                     , array
                     , bytestring
                     , text
                     , primitive

                     , hashable-fnv1a
                     , criterion
                     , deepseq
  else 
      buildable: False


-- Some code to visualize distributions of hashes.
Executable viz
  default-language:    Haskell2010
  main-is:             Main.hs
  ghc-options:         -Wall -O2 -threaded -funbox-strict-fields
  hs-source-dirs:      viz
  if flag(dev)
      buildable: True
      build-depends:   base
                     , array
                     , bytestring
                     , text
                     , primitive
                     , JuicyPixels
                     , mwc-random
                     , vector
                     
                     , hashable-fnv1a
                     , hashable
  else 
      buildable: False


-- TODO OR RENAME
source-repository head
  type:     git
  location: https://github.com/jberryman/hashabler.git



Executable core
 -- find dist/build/core/core-tmp -name '*dump-simpl'
  if flag(dev)
      buildable: True
      build-depends:       
           base
         , hashable-fnv1a
  else 
      buildable: False

  ghc-options: -ddump-to-file -ddump-simpl -dsuppress-module-prefixes -dsuppress-uniques -ddump-core-stats -ddump-inlinings
  ghc-options: -O2  -rtsopts  
 
  -- Either do threaded for eventlogging and simple timing...
  --ghc-options: -threaded -eventlog
  -- and run e.g. with +RTS -N -l

  -- ...or do non-threaded runtime
  --ghc-prof-options: -fprof-auto
  --Relevant profiling RTS settings:  -xt
  -- TODO also check out +RTS -A10m, and look at output of -sstderr

  -- hs-source-dirs: core-example
  main-is: core.hs
  default-language:    Haskell2010

